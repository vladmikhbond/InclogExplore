[["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder = undefined"],[0,88,[],["ed",""]],[0,79,[],[0,1,["","tree "],[" undefin",""]]],[0,85,[],[""," "]],[0,86,[],["","[] : "]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,91,[],["","Z "]],[0,79,[],[4,10,["tree","Z"],[]]],[0,86,[],[": Z ",""]],[0,79,[],[0,7,["","xs "],[]]],[],[],[],[],[0,86,[],[2,1,["[]","xs"],[]]],[0,88,[],[0,1,["","\r\npreOrder"],[""," "]]],[0,99,[],[0,1,["","xs"],["","tree "]]],[0,107,[],["","= "]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,109,[],["","f1 (Node y z ll rr) = (f1 ll) ++ [(y,z)] ++ (f1 rr)"]],[0,109,[],[2,49,["f1","Pre"],[]]],[0,109,[],[3,49,[1,2,["P","p"],["","Order"]],[]]],[],[],[],[],[],[],[],[],[],[],[],[],[81,85,[0,78,[],[" xs",""]],[]],[],[],[0,96,[],[3,64,["xs ",""],[]]],[],[0,96,[],[4,60,[1,3,["t","T"],[""," "]],[]]],[0,101,[],[0,60,["","t"],[]]],[],[0,96,[],[6,60,[0,6,["","("],["",")"]],[]]],[],[],[],[],[],[],[],[0,117,[],[14,33,["Node y z ll rr",""],[]]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,98,[],[5,1,["ree t",""],[" = preOrder () = (f1 ll) ++ [(y,z)] ++ (f1 rr)",""]]],[0,97,[],[1,1,["T","t n l r "],[]]],[0,104,[],[1,1,[" ",""],[]]],[],[],[],[],[0,105,[],[""," = "]],[],[],[],[0,108,[],[""," "]],[],[],[],[],[],[],[],[],[0,108,[],[0,1,["","preOrder"],[""," "]]],[0,117,[],[0,1,["","l"],[""," "]]],[0,119,[],[0,1,["","++"],[]]],[0,83,[],[2,37,["xs","[]"],["","pr"]]],[0,124,[],["","eOrder n ++ "]],[0,136,[],["","preOrder "]],[0,145,[],["","r"]],[],[],[],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (t n l r) = preOrder l ++ preOrder n ++ preOrder r@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.11: error: Parse error in pattern: t\r\n |\n6 | preOrder (t n l r) = preOrder l ++ preOrder n ++ preOrder r\r\r\n | ^^^^^^^"],[0,146,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.11: error: Parse error in pattern: t\r\n |\n6 | preOrder (t n l r) = preOrder l ++ preOrder n ++ preOrder r\r\r\n | ^^^^^^^",""]],[],[],[],[],[],[],[0,97,[],[1,48,["t","T"],[]]],[],[],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = preOrder l ++ preOrder n ++ preOrder r"],[],[],[0,90,[],[0,56,["","\r\npre"],[]]],[0,90,[],[0,61,["","Order a = "],[]]],[0,100,[],[0,61,["","a"],[]]],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder a = a\r\npreOrder (T n l r) = preOrder l ++ preOrder n ++ preOrder r"],[],[],[],[],[],[],[],[0,138,[],[10,14,[0,10,["","["],["","]"]],[]]],[0,154,[],[0,10,["","["],["","]"]]],[],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder a = a\r\npreOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.14: error:\r\n * Couldn't match expected type `[a6]' with actual type `Tree a'\r\n * In the expression: a\r\n In an equation for `preOrder': preOrder a = a\r\n * Relevant bindings include\r\n a :: Tree a (bound at C:\\temp\\qmgdfqzy.ejv.hs:6:10)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qmgdfqzy.ejv.hs:5:1)\r\n |\n6 | preOrder a = a\r\r\n | ^"],[0,166,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.14: error:\r\n * Couldn't match expected type `[a6]' with actual type `Tree a'\r\n * In the expression: a\r\n In an equation for `preOrder': preOrder a = a\r\n * Relevant bindings include\r\n a :: Tree a (bound at C:\\temp\\qmgdfqzy.ejv.hs:6:10)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qmgdfqzy.ejv.hs:5:1)\r\n |\n6 | preOrder a = a\r\r\n | ^",""]],[],[],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.36: error:\r\n * Occurs check: cannot construct the infinite type: a6 ~ [a6]\r\n Expected type: [a6]\r\n Actual type: [[a6]]\r\n * In the second argument of `(++)', namely\r\n `[preOrder n] ++ [preOrder r]'\r\n In the expression: preOrder l ++ [preOrder n] ++ [preOrder r]\r\n In an equation for `preOrder':\r\n preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\n * Relevant bindings include\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qdegiel3.iif.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\r\n | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nC:\\temp\\qdegiel3.iif.hs:6:46: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the expression: preOrder n\r\n In the first argument of `(++)', namely `[preOrder n]'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\qdegiel3.iif.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\qdegiel3.iif.hs:6:15)\r\n n :: a (bound at C:\\temp\\qdegiel3.iif.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qdegiel3.iif.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\r\n | ^"],[0,150,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.36: error:\r\n * Occurs check: cannot construct the infinite type: a6 ~ [a6]\r\n Expected type: [a6]\r\n Actual type: [[a6]]\r\n * In the second argument of `(++)', namely\r\n `[preOrder n] ++ [preOrder r]'\r\n In the expression: preOrder l ++ [preOrder n] ++ [preOrder r]\r\n In an equation for `preOrder':\r\n preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\n * Relevant bindings include\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qdegiel3.iif.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\r\n | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nC:\\temp\\qdegiel3.iif.hs:6:46: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the expression: preOrder n\r\n In the first argument of `(++)', namely `[preOrder n]'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\qdegiel3.iif.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\qdegiel3.iif.hs:6:15)\r\n n :: a (bound at C:\\temp\\qdegiel3.iif.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\qdegiel3.iif.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ [preOrder n] ++ [preOrder r]\r\r\n | ^",""]],[],[],[],[],[],[],[],[],[0,122,[],[1,27,["[",""],[]]],[0,132,[],[6,10,[1,4,["]",""],["[",""]],["]",""]]],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = preOrder l ++ preOrder n ++ preOrder r@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.45: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `preOrder n'\r\n In the second argument of `(++)', namely `preOrder n ++ preOrder r'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\mib5yijc.tay.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\mib5yijc.tay.hs:6:15)\r\n n :: a (bound at C:\\temp\\mib5yijc.tay.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\mib5yijc.tay.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ preOrder n ++ preOrder r\r\r\n | ^"],[0,146,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.45: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `preOrder n'\r\n In the second argument of `(++)', namely `preOrder n ++ preOrder r'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\mib5yijc.tay.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\mib5yijc.tay.hs:6:15)\r\n n :: a (bound at C:\\temp\\mib5yijc.tay.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\mib5yijc.tay.hs:5:1)\r\n |\n6 | preOrder (T n l r) = preOrder l ++ preOrder n ++ preOrder r\r\r\n | ^",""]],[],[],[],[],[],[0,108,[],[0,38,["","("],[]]],[0,119,[],[4,24,[0,4,["",")"],["","("]],[]]],[0,135,[],[4,10,[0,4,["",")"],["","("]],[]]],[0,151,[],["",")"]],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.48: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `(preOrder n)'\r\n In the second argument of `(++)', namely\r\n `(preOrder n) ++ (preOrder r)'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\1h0asdgi.t43.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\1h0asdgi.t43.hs:6:15)\r\n n :: a (bound at C:\\temp\\1h0asdgi.t43.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\1h0asdgi.t43.hs:5:1)\r\n |\n6 | preOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)\r\r\n | ^"],[0,152,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.48: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `(preOrder n)'\r\n In the second argument of `(++)', namely\r\n `(preOrder n) ++ (preOrder r)'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\1h0asdgi.t43.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\1h0asdgi.t43.hs:6:15)\r\n n :: a (bound at C:\\temp\\1h0asdgi.t43.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\1h0asdgi.t43.hs:5:1)\r\n |\n6 | preOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)\r\r\n | ^",""]],[],[],[],[],[],[],[],[],[],[0,118,[],[15,19,[0,15,["","T "],[""," T"]],[]]],[0,154,[],[0,2,["","T "],[]]],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = (preOrder T l) ++ (preOrder T n) ++ (preOrder T r)@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.1: error:\r\n * Couldn't match type `Tree a15'\r\n with `a -> Tree a -> Tree a -> Tree a'\r\n Expected type: (a -> Tree a -> Tree a -> Tree a)\r\n -> Tree a15 -> [a16]\r\n Actual type: Tree a15 -> [a16]\r\n * Relevant bindings include\r\n preOrder :: (a -> Tree a -> Tree a -> Tree a) -> Tree a15 -> [a16]\r\n (bound at C:\\temp\\rroqsdux.kbn.hs:5:1)\r\n |\n5 | preOrder Z = []\r\r\n | ^^^^^^^^^^^^^^^^...\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:12:18: error:\r\n * Couldn't match expected type `a0\r\n -> Tree a0 -> Tree a0 -> Tree a0'\r\n with actual type `Tree a11'\r\n * Possible cause: `T' is applied to too many arguments\r\n In the first argument of `preOrder', namely `(T 1 Z Z)'\r\n In the first argument of `(/=)', namely `preOrder (T 1 Z Z)'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^^^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:12:30: error:\r\n * Couldn't match expected type `Tree a5 -> [a6]'\r\n with actual type `[a12]'\r\n * In the second argument of `(/=)', namely `[1]'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:13:17: error:\r\n * Couldn't match expected type `a2\r\n -> Tree a2 -> Tree a2 -> Tree a2'\r\n with actual type `Tree a1'\r\n * In the first argument of `preOrder', namely `t1'\r\n In the first argument of `(/=)', namely `preOrder t1'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:13:23: error:\r\n * Couldn't match expected type `Tree a7 -> [a8]'\r\n with actual type `[a13]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 4]'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^^^^^^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:14:17: error:\r\n * Couldn't match expected type `a4\r\n -> Tree a4 -> Tree a4 -> Tree a4'\r\n with actual type `Tree a3'\r\n * In the first argument of `preOrder', namely `t2'\r\n In the first argument of `(/=)', namely `preOrder t2'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:14:23: error:\r\n * Couldn't match expected type `Tree a9 -> [a10]'\r\n with actual type `[a14]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 3, ....]'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^^^^^^^^^^^^"],[0,158,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.1: error:\r\n * Couldn't match type `Tree a15'\r\n with `a -> Tree a -> Tree a -> Tree a'\r\n Expected type: (a -> Tree a -> Tree a -> Tree a)\r\n -> Tree a15 -> [a16]\r\n Actual type: Tree a15 -> [a16]\r\n * Relevant bindings include\r\n preOrder :: (a -> Tree a -> Tree a -> Tree a) -> Tree a15 -> [a16]\r\n (bound at C:\\temp\\rroqsdux.kbn.hs:5:1)\r\n |\n5 | preOrder Z = []\r\r\n | ^^^^^^^^^^^^^^^^...\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:12:18: error:\r\n * Couldn't match expected type `a0\r\n -> Tree a0 -> Tree a0 -> Tree a0'\r\n with actual type `Tree a11'\r\n * Possible cause: `T' is applied to too many arguments\r\n In the first argument of `preOrder', namely `(T 1 Z Z)'\r\n In the first argument of `(/=)', namely `preOrder (T 1 Z Z)'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^^^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:12:30: error:\r\n * Couldn't match expected type `Tree a5 -> [a6]'\r\n with actual type `[a12]'\r\n * In the second argument of `(/=)', namely `[1]'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:13:17: error:\r\n * Couldn't match expected type `a2\r\n -> Tree a2 -> Tree a2 -> Tree a2'\r\n with actual type `Tree a1'\r\n * In the first argument of `preOrder', namely `t1'\r\n In the first argument of `(/=)', namely `preOrder t1'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:13:23: error:\r\n * Couldn't match expected type `Tree a7 -> [a8]'\r\n with actual type `[a13]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 4]'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^^^^^^^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:14:17: error:\r\n * Couldn't match expected type `a4\r\n -> Tree a4 -> Tree a4 -> Tree a4'\r\n with actual type `Tree a3'\r\n * In the first argument of `preOrder', namely `t2'\r\n In the first argument of `(/=)', namely `preOrder t2'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\rroqsdux.kbn.hs:14:23: error:\r\n * Couldn't match expected type `Tree a9 -> [a10]'\r\n with actual type `[a14]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 3, ....]'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^^^^^^^^^^^^",""]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,118,[],[2,38,["T ",""],[]]],[0,134,[],[2,16,["T ",""],[2,2,["T ",""],[]]]],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.48: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `(preOrder n)'\r\n In the second argument of `(++)', namely\r\n `(preOrder n) ++ (preOrder r)'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:15)\r\n n :: a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\tr4b5f0x.jt4.hs:5:1)\r\n |\n6 | preOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)\r\r\n | ^"],[0,152,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-14 поз.48: error:\r\n * Occurs check: cannot construct the infinite type: a ~ Tree a\r\n * In the first argument of `preOrder', namely `n'\r\n In the first argument of `(++)', namely `(preOrder n)'\r\n In the second argument of `(++)', namely\r\n `(preOrder n) ++ (preOrder r)'\r\n * Relevant bindings include\r\n r :: Tree a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:17)\r\n l :: Tree a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:15)\r\n n :: a (bound at C:\\temp\\tr4b5f0x.jt4.hs:6:13)\r\n preOrder :: Tree a -> [a6] (bound at C:\\temp\\tr4b5f0x.jt4.hs:5:1)\r\n |\n6 | preOrder (T n l r) = (preOrder l) ++ (preOrder n) ++ (preOrder r)\r\r\n | ^",""]],[],[],[0,150,[],[0,2,["","T "],[]]],[0,118,[],[15,21,[0,15,["","T "],[""," T"]],[]]],[],[0,99,[],[1,58,["n","l"],[]]],[0,101,[],[1,56,["l","n"],[]]],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T l n r) = (preOrder T l) ++ (preOrder T n) ++ (preOrder T r)@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.1: error:\r\n * Couldn't match type `Tree t'\r\n with `a -> Tree a -> Tree a -> Tree a'\r\n Expected type: (a -> Tree a -> Tree a -> Tree a) -> t -> [a12]\r\n Actual type: Tree t -> [a12]\r\n * Relevant bindings include\r\n preOrder :: (a -> Tree a -> Tree a -> Tree a) -> t -> [a12]\r\n (bound at C:\\temp\\pkga5d0s.asj.hs:5:1)\r\n |\n5 | preOrder Z = []\r\r\n | ^^^^^^^^^^^^^^^^...\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:12:18: error:\r\n * Couldn't match expected type `a0\r\n -> Tree a0 -> Tree a0 -> Tree a0'\r\n with actual type `Tree a8'\r\n * Possible cause: `T' is applied to too many arguments\r\n In the first argument of `preOrder', namely `(T 1 Z Z)'\r\n In the first argument of `(/=)', namely `preOrder (T 1 Z Z)'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^^^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:12:30: error:\r\n * Couldn't match expected type `t0 -> [a5]' with actual type `[a9]'\r\n * In the second argument of `(/=)', namely `[1]'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:13:17: error:\r\n * Couldn't match expected type `a2\r\n -> Tree a2 -> Tree a2 -> Tree a2'\r\n with actual type `Tree a1'\r\n * In the first argument of `preOrder', namely `t1'\r\n In the first argument of `(/=)', namely `preOrder t1'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:13:23: error:\r\n * Couldn't match expected type `t1 -> [a6]'\r\n with actual type `[a10]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 4]'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^^^^^^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:14:17: error:\r\n * Couldn't match expected type `a4\r\n -> Tree a4 -> Tree a4 -> Tree a4'\r\n with actual type `Tree a3'\r\n * In the first argument of `preOrder', namely `t2'\r\n In the first argument of `(/=)', namely `preOrder t2'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:14:23: error:\r\n * Couldn't match expected type `t2 -> [a7]'\r\n with actual type `[a11]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 3, ....]'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^^^^^^^^^^^^"],[0,158,[],["@#$ОШИБКИ КОМПИЛЯЦИИ:\r\nстр.-15 поз.1: error:\r\n * Couldn't match type `Tree t'\r\n with `a -> Tree a -> Tree a -> Tree a'\r\n Expected type: (a -> Tree a -> Tree a -> Tree a) -> t -> [a12]\r\n Actual type: Tree t -> [a12]\r\n * Relevant bindings include\r\n preOrder :: (a -> Tree a -> Tree a -> Tree a) -> t -> [a12]\r\n (bound at C:\\temp\\pkga5d0s.asj.hs:5:1)\r\n |\n5 | preOrder Z = []\r\r\n | ^^^^^^^^^^^^^^^^...\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:12:18: error:\r\n * Couldn't match expected type `a0\r\n -> Tree a0 -> Tree a0 -> Tree a0'\r\n with actual type `Tree a8'\r\n * Possible cause: `T' is applied to too many arguments\r\n In the first argument of `preOrder', namely `(T 1 Z Z)'\r\n In the first argument of `(/=)', namely `preOrder (T 1 Z Z)'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^^^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:12:30: error:\r\n * Couldn't match expected type `t0 -> [a5]' with actual type `[a9]'\r\n * In the second argument of `(/=)', namely `[1]'\r\n In the expression: preOrder (T 1 Z Z) /= [1]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder (T 1 Z Z) /= [1]\r\n |\n12 | test | preOrder (T 1 Z Z) /= [1] = error \"Wrong.\"\r\r\n | ^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:13:17: error:\r\n * Couldn't match expected type `a2\r\n -> Tree a2 -> Tree a2 -> Tree a2'\r\n with actual type `Tree a1'\r\n * In the first argument of `preOrder', namely `t1'\r\n In the first argument of `(/=)', namely `preOrder t1'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:13:23: error:\r\n * Couldn't match expected type `t1 -> [a6]'\r\n with actual type `[a10]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 4]'\r\n In the expression: preOrder t1 /= [0, 1, 2, 4]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t1 /= [0, 1, 2, 4]\r\n |\n13 | | preOrder t1 /= [0,1,2,4] = error \"Wrong.\"\r\r\n | ^^^^^^^^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:14:17: error:\r\n * Couldn't match expected type `a4\r\n -> Tree a4 -> Tree a4 -> Tree a4'\r\n with actual type `Tree a3'\r\n * In the first argument of `preOrder', namely `t2'\r\n In the first argument of `(/=)', namely `preOrder t2'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^\r\n\r\nC:\\temp\\pkga5d0s.asj.hs:14:23: error:\r\n * Couldn't match expected type `t2 -> [a7]'\r\n with actual type `[a11]'\r\n * In the second argument of `(/=)', namely `[0, 1, 2, 3, ....]'\r\n In the expression: preOrder t2 /= [0, 1, 2, 3, ....]\r\n In a stmt of a pattern guard for\r\n an equation for `test':\r\n preOrder t2 /= [0, 1, 2, 3, ....]\r\n |\n14 | | preOrder t2 /= [0,1,2,3,4,5] = error \"Wrong.\"\r\r\n | ^^^^^^^^^^^^^",""]],[0,99,[],[3,56,[0,1,["","n "],[" n",""]],[]]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,73,[],[7,10,[1,5,["O","o"],["Z","Nil"]],[10,8,[1,6,["O","o"],[1,1,["T","Node"],["n","a"]]],[5,5,[1,3,["(",""],["O","o"]],[13,5,[4,4,[2,1,["T ",""],[")",""]],[1,3,["(","[a] ++ "],["O","o"]]],[10,1,["T n) ++ (p",""],["eOrder T r)",""]]]]]]],[0,73,[],[1,70,["o","O"],[]]],[0,79,[],[3,62,["Nil","Z"],[]]],[0,90,[],[1,51,["o","O"],[]]],[0,97,[],[4,41,["Node","T"],[]]],[0,111,[],[1,27,["o","O"],[]]],[0,132,[],[1,6,["o","O"],[]]],[],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T a l r) = preOrder l ++ [a] ++ preOrder r@#$OK"],["","\r\ndata Tree a = Z | T a (Tree a) (Tree a)\r\n deriving (Eq, Show)\r\n\r\npreOrder Z = []\r\npreOrder (T a l r) = preOrder l ++ [a] ++ preOrder r@#$OK"]]